package member.model.dao;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import member.model.vo.Member;

public class MemberDao {

	public Member selectMember(Connection conn, String userId, String userPwd) {
		Statement stmt = null;
		ResultSet rset = null;
		
		String query = "SELECT * FROM member WHERE MEMBER_ID = '" + userId + "' AND MEMBER_PWD = '" + userPwd + "'";
		
		Member m = null;
		
		try {
			stmt = conn.createStatement();
			rset = stmt.executeQuery(query);
			
			if(rset.next())
			{
				m = new Member();
				m.setMemberId(rset.getString("member_id"));
				m.setMemberPwd(rset.getString("member_pwd"));
				m.setMemberName(rset.getString("member_name"));
				m.setMemberAge(rset.getInt("member_age"));
				m.setMemberAddr(rset.getString("member_addr"));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				rset.close();
				stmt.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
			
		}
		
		return m;
	}

	public boolean updateMember(Connection conn, Member m) {
		Statement stmt = null;
		int result = 0;
		
		String query = "UPDATE member SET MEMBER_PWD = '" + m.getMemberPwd() 
						+ "', MEMBER_ADDR = '" + m.getMemberAddr() + "' WHERE MEMBER_ID = '" + m.getMemberId() + "'";
		
		
		try {
			stmt = conn.createStatement();
			result = stmt.executeUpdate(query);
			if(result>0)
			{
				conn.commit();
			}
			else
			{
				conn.rollback();
			}
			
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				stmt.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
			
		}
		
		return result>0;
	}
	
	public boolean idCheck(Connection conn, String id) {
		Statement stmt = null;
		ResultSet rset = null;
		boolean result = false;
		
		String query = "SELECT * FROM member WHERE MEMBER_ID = '" + id + "'";
		
		try {
			stmt = conn.createStatement();
			rset = stmt.executeQuery(query);
			
			if(rset.next())
			{
				result =  true; // 해당 ID 사용자가 있음
			}
			else
			{
				result = false; // 해당 ID 사용자가 없음
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				rset.close();
				stmt.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
			
		}
		return result;
	}

	public boolean insertMember(Connection conn, Member m) {
		Statement stmt = null;
		ResultSet rset = null;
		boolean result = false;
		
		return false;
	}	
	
}
