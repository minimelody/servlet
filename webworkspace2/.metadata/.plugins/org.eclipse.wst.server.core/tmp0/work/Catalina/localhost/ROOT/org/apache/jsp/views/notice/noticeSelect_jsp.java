/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.31
 * Generated at: 2018-05-30 06:52:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.notice;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import notice.model.vo.*;
import member.model.vo.*;
import java.util.*;

public final class noticeSelect_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("notice.model.vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("member.model.vo");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
 Notice n = (Notice)request.getAttribute("notice"); 
	ArrayList<NoticeComment> list = (ArrayList<NoticeComment>)request.getAttribute("comment");

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>공지사항 내용</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("글번호 : ");
      out.print(n.getNoticeNo());
      out.write("<br>\r\n");
      out.write("글쓴이 : ");
      out.print(n.getUserId());
      out.write("<br>\r\n");
      out.write("작성일 : ");
      out.print(n.getRegDate());
      out.write("<br>\r\n");
      out.write("글제목 : ");
      out.print(n.getSubject());
      out.write("<br>\r\n");
      out.write("<textarea rows=\"20\" cols=\"100\" readonly style=\"resize:none;\">");
      out.print(n.getContents());
      out.write("</textarea>\r\n");
      out.write("<br>\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction back(){\r\n");
      out.write("\t\tlocation.href=\"notice\";\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("<button onclick=\"back()\">목록</button>\r\n");
      out.write("\r\n");
      out.write("<form action=\"noticeUpdateReady\" style=\"display:inline;\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"noticeNo\" value=\"");
      out.print(n.getNoticeNo());
      out.write("\">\r\n");
      out.write("\t<input type=\"submit\" value=\"수정\"> \r\n");
      out.write("</form>\r\n");
      out.write("<form action=\"noticeDelete\" method=\"get\" style=\"display:inline;\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"noticeno\" value=\"");
      out.print(n.getNoticeNo());
      out.write("\">\r\n");
      out.write("\t<input type=\"submit\" value=\"삭제\"> \r\n");
      out.write("</form>\r\n");
      out.write("<form action=\"/views/notice/noticeWriteReady.jsp\" style=\"display:inline;\">\r\n");
      out.write("\t<input type=\"submit\" value =\"글쓰기\"> \r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<h1>댓글</h1>\r\n");
      out.write("<form action=\"commentWrite\">\r\n");
if(((Member)session.getAttribute("user"))==null){ 
      out.write("\r\n");
      out.write("\t<textarea rows=\"5\" cols=\"100\" name=\"comment\" placeholder=\"로그인 한 사용자만 댓글 작성이 가능합니다.\" readonly style=\"resize:none;\" onclick=\"login();\"></textarea><br>\r\n");
}else{ 
      out.write("\r\n");
      out.write("\t<input type=\"hidden\" name=\"noticeno\" value=\"");
      out.print(n.getNoticeNo());
      out.write("\">\r\n");
      out.write("\t<textarea rows=\"5\" cols=\"100\" name=\"comment\" placeholder=\"댓글을 작성하세요\" style=\"resize:none;\"></textarea><br>\r\n");
      out.write("\t<input type=\"submit\" value=\"댓글작성\">\r\n");
} 
      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction login(){\r\n");
      out.write("\t\talert(\"로그인을 먼저 진행해주세요\");\r\n");
      out.write("\t\twindow.open(\"/views/member/login_popup.html\",\"_blank\",\"width=400px, height=200px\");\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
for(NoticeComment nc : list){
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t작성자 : ");
      out.print(nc.getUserId());
      out.write(" / 작성일 : ");
      out.print(nc.getRegDate());
      out.write(" / \r\n");
      out.write("\t<label id=");
      out.print(nc.getCommentNo());
      out.write('>');
      out.print(nc.getContent());
      out.write("</label>\r\n");
      out.write("\t");
if(((Member)session.getAttribute("user"))!=null &&
			((Member)session.getAttribute("user")).getUserId().equals(nc.getUserId())
			){
		
      out.write("\r\n");
      out.write("\t<form action=\"commentUpdate\" method=\"get\" style=\"display:inline;\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"comment\" id=\"");
      out.print(nc.getCommentNo());
      out.write("_input\" value=\"");
      out.print(nc.getContent());
      out.write("\"/>\r\n");
      out.write("\t<input type=\"hidden\" name=\"commentNo\" value=\"");
      out.print(nc.getCommentNo());
      out.write("\"/>\r\n");
      out.write("\t<input type=\"hidden\" name=\"noticeNo\" value=\"");
      out.print(nc.getNoticeNo() );
      out.write("\">\r\n");
      out.write("\t<button type=\"button\" id=\"");
      out.print(nc.getCommentNo());
      out.write("_btn\" onclick=\"modify(");
      out.print(nc.getCommentNo());
      out.write(");\">수정</button>\r\n");
      out.write("\t<input type=\"hidden\" id=\"");
      out.print(nc.getCommentNo());
      out.write("_submit\" value=\"수정\">\r\n");
      out.write("\t<button type=\"button\" id=\"");
      out.print(nc.getCommentNo());
      out.write("_reBtn\" style=\"display:none;\" onclick=\"cancle(");
      out.print(nc.getCommentNo());
      out.write(");\">취소</button>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<form action=\"commentDelete\" style=\"display:inline;\">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"commentNo\" value=\"");
      out.print(nc.getCommentNo());
      out.write("\">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"noticeNo\" value=\"");
      out.print(nc.getNoticeNo() );
      out.write("\">\r\n");
      out.write("\t\t<input type=\"submit\" value=\"삭제\">\r\n");
      out.write("\t</form>\r\n");
      out.write("\t");
} 
      out.write("\r\n");
      out.write("\t<br>\r\n");
} 
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction modify(id){\r\n");
      out.write("\t\tdocument.getElementById(id).style=\"display:none\";\r\n");
      out.write("\t\tdocument.getElementById(id+\"_input\").type=\"text\";\r\n");
      out.write("\t\tdocument.getElementById(id+\"_btn\").style=\"display:none\";\r\n");
      out.write("\t\tdocument.getElementById(id+\"_submit\").type=\"submit\";\r\n");
      out.write("\t\tdocument.getElementById(id+\"_reBtn\").style=\"display:inline\";\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction cancle(id){\r\n");
      out.write("\t\tdocument.getElementById(id).style=\"display:inline\";\r\n");
      out.write("\t\tdocument.getElementById(id+\"_input\").type=\"hidden\";\r\n");
      out.write("\t\tdocument.getElementById(id+\"_btn\").style=\"display:inline\";\r\n");
      out.write("\t\tdocument.getElementById(id+\"_submit\").type=\"hidden\";\r\n");
      out.write("\t\tdocument.getElementById(id+\"_reBtn\").style=\"display:none\";\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("<!--  <form action=\"logout\" method=\"post\">\r\n");
      out.write("\t<input type=\"submit\" value=\"로그아웃\">\r\n");
      out.write("</form>\r\n");
      out.write("-->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
